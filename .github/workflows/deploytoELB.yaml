name: Deploy to elstic beanstalk
on: 
    push:
      branches:
        testdockerdeploy
    workflow_dispatch:
jobs: 
    buildanddeploytoelb:
        runs-on: ubuntu-latest
        permissions: 
            contents: read
            packages: write 
        steps:
            - name: checkout code from repo 
              uses: actions/checkout@v3    
            - name: setup the java and maven environment
              uses: actions/setup-java@v3
              with: 
                distribution: 'adopt'
                java-version:  '11'
            - name: build artifact with maven
              run: mvn package
#             - name: perform code analysis with sonarqube 
#               run: mvn sonar:sonar -Dsonar.projectKey=java-webapp -Dsonar.host.url=${{secrets.SONAR_HOST_URL}} -Dsonar.token=${{secrets.SONAR_LOGIN_TOKEN}}
            - name: publish to github packages 
              run: mvn --batch-mode deploy 
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         
            - name: authenticate to aws account 
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
                aws-region: ${{secrets.AWS_REGION}}
            
            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1
        
            - name: Build, tag, and push docker image to Amazon ECR
              id: build-image
              env:
                  REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  REPOSITORY: xashy-webapp
                  IMAGE_TAG: ${{ github.sha }}
              run: |
                docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
                docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
                echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

            - name: Fill in the new image ID in the Amazon ECS task definition
              id: task-def
              uses: aws-actions/amazon-ecs-render-task-definition@v1
              with:
                task-definition: task_definition.json
                container-name: xashy-webapp
                image: ${{ steps.build-image.outputs.image }}

            - name: Deploy Amazon ECS task definition
              uses: aws-actions/amazon-ecs-deploy-task-definition@v1
              with:
                task-definition: ${{ steps.task-def.outputs.task-definition }}
                service: mywebapp
                cluster: xashywebapp
                wait-for-service-stability: true



############### the end of the line######### Keep trying

#### added docker file ####
            
